generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model armies {
  id          String     @id
  category_id Int
  name        String     @unique
  description String     @db.VarChar(255)
  banner_url  String?
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_categoryid")
  units       units[]
}

model categories {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  banner_url String?
  armies     armies[]
}

model customarmy {
  customarmyid                                 Int         @id @default(autoincrement())
  userid                                       Int         @default(autoincrement())
  username                                     String      @unique
  unitsinarmyid                                Int         @default(autoincrement())
  unitsinarmy                                  unitsinarmy @relation(fields: [unitsinarmyid], references: [unitsinarmyid], onDelete: Cascade, onUpdate: NoAction, map: "fk_unitsinarmyid")
  userprofile                                  userprofile @relation(fields: [userid], references: [userid], onDelete: Cascade, onUpdate: NoAction, map: "fk_userid")
  userprofile_customarmy_usernameTouserprofile userprofile @relation("customarmy_usernameTouserprofile", fields: [username], references: [username], onDelete: Cascade, onUpdate: NoAction, map: "fk_username")
}

model units {
  id          Int           @id @default(autoincrement())
  unit_id     Int
  faction_id  String
  line        Int
  name        String
  m           String
  ws          String
  bs          String
  s           String
  t           String
  w           String
  a           String
  ld          String
  sv          String        @default(dbgenerated("0"))
  minunits    Int
  maxunits    Int
  cost        Int           @default(0)
  role        String
  armies      armies        @relation(fields: [faction_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_factionid")
  unitsinarmy unitsinarmy[]
}

model unitsinarmy {
  unitsinarmyid Int          @id @default(autoincrement())
  id            Int          @default(autoincrement())
  unit_id       Int
  name          String
  line          Int
  minunits      Int
  maxunits      Int
  cost          Int          @default(0)
  customarmy    customarmy[]
  units         units        @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_id")
}

model userprofile {
  userid                                      Int          @id @default(autoincrement())
  firebaseid                                  String       @unique @db.VarChar
  username                                    String       @unique
  customarmy                                  customarmy[]
  customarmy_customarmy_usernameTouserprofile customarmy?  @relation("customarmy_usernameTouserprofile")
}
